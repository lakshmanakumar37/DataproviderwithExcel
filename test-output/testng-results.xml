<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-04T19:26:38 IST" name="Default suite" finished-at="2023-01-04T19:27:24 IST" duration-ms="45259">
    <groups>
    </groups>
    <test started-at="2023-01-04T19:26:38 IST" name="Default test" finished-at="2023-01-04T19:27:24 IST" duration-ms="45259">
      <class name="com.aiite.excelRead.TestCases">
        <test-method is-config="true" signature="browserSetUp()[pri:0, instance:com.aiite.excelRead.TestCases@383bfa16]" started-at="2023-01-04T19:26:18 IST" name="browserSetUp" finished-at="2023-01-04T19:26:38 IST" duration-ms="19822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserSetUp -->
        <test-method signature="testCase([Ljava.lang.String;)[pri:0, instance:com.aiite.excelRead.TestCases@383bfa16]" started-at="2023-01-04T19:26:57 IST" name="testCase" data-provider="getDataExcel" finished-at="2023-01-04T19:27:09 IST" duration-ms="12143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@1702830d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase -->
        <test-method signature="testCase([Ljava.lang.String;)[pri:0, instance:com.aiite.excelRead.TestCases@383bfa16]" started-at="2023-01-04T19:27:09 IST" name="testCase" data-provider="getDataExcel" finished-at="2023-01-04T19:27:11 IST" duration-ms="1562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@278667fd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase -->
        <test-method signature="testCase([Ljava.lang.String;)[pri:0, instance:com.aiite.excelRead.TestCases@383bfa16]" started-at="2023-01-04T19:27:11 IST" name="testCase" data-provider="getDataExcel" finished-at="2023-01-04T19:27:15 IST" duration-ms="4132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@6b52dd31]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase -->
        <test-method signature="testCase([Ljava.lang.String;)[pri:0, instance:com.aiite.excelRead.TestCases@383bfa16]" started-at="2023-01-04T19:27:15 IST" name="testCase" data-provider="getDataExcel" finished-at="2023-01-04T19:27:19 IST" duration-ms="4445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@5d425813]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase -->
        <test-method signature="testCase([Ljava.lang.String;)[pri:0, instance:com.aiite.excelRead.TestCases@383bfa16]" started-at="2023-01-04T19:27:19 IST" name="testCase" data-provider="getDataExcel" finished-at="2023-01-04T19:27:22 IST" duration-ms="2466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@6a937336]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase -->
        <test-method signature="testCase([Ljava.lang.String;)[pri:0, instance:com.aiite.excelRead.TestCases@383bfa16]" started-at="2023-01-04T19:27:22 IST" name="testCase" data-provider="getDataExcel" finished-at="2023-01-04T19:27:24 IST" duration-ms="1604" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@684b31de]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase -->
        <test-method signature="testCase2()[pri:0, instance:com.aiite.excelRead.TestCases@383bfa16]" started-at="2023-01-04T19:27:24 IST" name="testCase2" finished-at="2023-01-04T19:27:24 IST" duration-ms="13" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.aiite.excelRead.TestCases.testCase2(TestCases.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method is-config="true" signature="browserClose()[pri:0, instance:com.aiite.excelRead.TestCases@383bfa16]" started-at="2023-01-04T19:27:29 IST" name="browserClose" finished-at="2023-01-04T19:27:34 IST" duration-ms="5741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserClose -->
      </class> <!-- com.aiite.excelRead.TestCases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
